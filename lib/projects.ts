const projects = [
  {
    title: "Miesiany Miesiany Kebab",
    industry: "Food & Restaurant industry",
    description:
      "Full-stack application for a kebab restaurant created with Spring and Angular. Application is also intended to serve as a restaurantâ€™s business card, in order to reach a larger number of customers, and to enable the fulfillment and tracking of orders.",
    images: ["/projects/miesiany-miesiany-kebab/logo.png"],
    features: [
      "Session-based authentication system, taking into data security. For this purpose, I implemented storing passwords encrypted with the bcrypt algorithm in database.",
      "Eye-catching, well-tailored and well-thought user interface,",
      "Responsive Web Design to improve accessibility of page at all types of devices,",
      "Multilingual pages (Polish or English),",
      "Multilingual validation for all forms. Validation messages are sent by backend in appropriate language specified in request header,",
      "Integration with TomTom Map API to add map with pointer, which aims to help potential customers easily locate restaurant,",
      "Bash script, which starts PostgreSQL database, backend and frontend with one command,",
      "Possibility to follow application flow and diagnose potential issues by accessing informational, warning and error logs in console,",
      "Possibility to display home page. This is the 'first contact section', which means, that clients see it firstly, after navigating to /. For this reason, this section had to be best thought out from a marketing perspective. I placed there many informations, that can encourage potential customer to place the order. Home page is divided to four subsections: hero section, about us, awards and location. Subsections contain, among others, many marketing slogans, certificates, guarantees, acknowledgments and a map with a pointer,",
      "Possibility to display highlighted with proper color opening hours of restaurant on each day. Manager can easily update these hours,",
      "Possibility to display menu of the restaurant. In menu section clients can see three tables: meals, addons to your meal and beverages, which contains each item details like name, price, capacity or ingredients. This entire section is manageable by the manager. Employee with this role can add, update and remove each type of item. Items in each table are sorted by name,",
      "Possibility to display contact details. In contact section clients can see contact data (including phone number and email address), nicknames at social media and map with location pointer. Contact data is editable by manager,",
      "Job board, which enable to publish dateiled job offers by manager. Manager can add job offer with information such as position name, description, list of mandatory requirements, list of nice to have requirements, list of employment types and hourly wage gross. Once added, each job offer is fully customizable. Website guests can apply to each job offer by fulfilling form (with attaching a CV in PDF/DOC format). Manager has possibility to display all candidates, which applied to job offer, remove those who do not fit the position or peek/download attached CV of desired candidate,",
      "Promotions for meals, beverages and addons. It is possible to display promotions details in proper section on website by all users. If some menu position is already added to certain promotion, users can see price change in menu section on website. All promotions are editable and easy to maintain by manager. Manager can add, update and delete promotions,",
      "Multilingual newsletter with email verification implemented with usage of Observer design pattern. Each customer has possibility to sign up to newsletter focused on promotions and choose preffered language of email messages (Polish or English). When manager adds some promotion, then email is sent to all verified subscribers. Some methods were created as asynchronous to enhance application preformance. It is also possibility to unsubscribe newsletter at any time,",
      "Discount codes with which customers can reduct price of order. Each discount code has its expiration date and number of remaining uses. Such codes are automatically generated and sending to customers, who provide their email adresse during ordering process - either after every 10 orders or when the order total price exceeds 100 PLN. Manager can add, update and delete discount codes (allowing for manual distribution as well),",
      "Possibility to place order by customers in easy and concise way. Each menu position can be selected and added to such order and partially customized (by choosing size, meat, sauce, quantity or capacity). After adding item, customer may continue adding more items, proceed to the next step, or come back later - all order details are saved in local storage. Next step is choosing preferred delivery method: pickup at the restaurant or home delivery. Depending on the choice, a dedicated panel is shown to collect the necessary information. Finally, the customer has the option to leave additional comments and enter a discount code, if available, to receive a price reduction. Managers and employees can add, update and delete orders,",
      "Track order panel, where customers can easily monitor status of their order in real time. Here they can find information such as order id (number of order displayed on the screen in restaurant), total price, delivery address (if home delivery method was selected), payment methods, ordered items details and current order status. Customers can access this panel for up to two hours after the last update to their order,",
      "Order status display for in-restaurant screen, which shows numbers of orders currently being prepared (in gray color) and those, that are ready (in green color). This provides clear information to customers waiting in the restaurant, improving communication and overall experience.",
    ],
    technologies: [
      "Java 21",
      "TypeScript",
      "Spring",
      "Angular 18",
      "Bootstrap",
      "Hibernate",
      "Thymeleaf",
      "Maven",
      "JUnit",
      "Mockito",
      "PostgreSQL",
      "HTML",
      "SCSS",
      "Docker",
      "Bash",
    ],
    repoUrl: "https://github.com/P4ZD4N/miesiany-miesiany-kebab",
    completed: false,
  },
  {
    title: "Bibliotheca Chudyana",
    industry: "Library industry",
    description: `Backend app with sublte frontend elements created to solve problems typical for companies from library/bookstore industries. System offers a lot of features, that allow effective business management and seamless interaction with customers. Architected with great consideration for meeting all the requirements of a potential entrepreneur, who would be interested in digitalization of common business scenarios. Automating processes like book and order management, user registration saves time for both employees and customers. Application also improves customer experience by making it easier to search for books, place orders, or leave reviews, leading to higher satisfaction and convenience. Digitization of such library services is attractive to new customers because of easy access to its resources online. Users can browse the library 24/7, which can increase the number of orders placed. `,
    images: [
      "/projects/bibliotheca-chudyana/logo.png",
      "/projects/bibliotheca-chudyana/1.png",
      "/projects/bibliotheca-chudyana/2.png",
      "/projects/bibliotheca-chudyana/3.png",
      "/projects/bibliotheca-chudyana/4.png",
      "/projects/bibliotheca-chudyana/5.png",
      "/projects/bibliotheca-chudyana/6.png",
      "/projects/bibliotheca-chudyana/7.png",
      "/projects/bibliotheca-chudyana/8.png",
      "/projects/bibliotheca-chudyana/9.png",
      "/projects/bibliotheca-chudyana/10.png",
      "/projects/bibliotheca-chudyana/11.png",
      "/projects/bibliotheca-chudyana/12.png",
      "/projects/bibliotheca-chudyana/13.png",
      "/projects/bibliotheca-chudyana/14.png",
      "/projects/bibliotheca-chudyana/15.png",
      "/projects/bibliotheca-chudyana/16.png",
      "/projects/bibliotheca-chudyana/17.png",
      "/projects/bibliotheca-chudyana/18.png",
      "/projects/bibliotheca-chudyana/19.png",
      "/projects/bibliotheca-chudyana/21.png",
      "/projects/bibliotheca-chudyana/22.png",
    ],
    features: [
      "Secure user registration and authentication system, which use bcrypt encryption algorithm to ensure data protection.",
      "Ability for users to change the email address and password.",
      "Browsing full catalog of books and searching them based on selected criteria and keywords.",
      "Adding new books and updating existing ones by users with appropriate roles.",
      "Viewing most popular categories and newly added books (books, which were added to library in past 7 days)",
      "Viewing available discounts, with option to add new or update existing by users with appropriate roles.",
      "Adding, updating or deleting. review or rating for each book by authenticated users.",
      "Viewing and managing own profile for authenticated users.",
      "Adding or removing books from wishlist.",
      "Adding or removing books from cart.",
      "Placing orders using items from cart.",
      "Admin panel enabling administrators to manage books, users, orders, reviews, and discounts.",
      "Manager panel enabling managers to manage books, orders, reviews and discounts.",
      "Employee panel enabling employees to manage books and orders.",
    ],
    technologies: [
      "Java",
      "Spring",
      "Hibernate",
      "Thymeleaf",
      "Maven",
      "JUnit",
      "Mockito",
      "MySQL",
      "JavaScript",
      "HTML",
      "SCSS",
      "Docker",
    ],
    repoUrl: "https://github.com/P4ZD4N/bibliotheca-chudyana",
    completed: true,
  },
  {
    title: "GloboGym",
    industry: "Fitness & Health industry",
    description: `Robust desktop application developed with usage of JavaFX designed to support major of operations of a modern fitness club. System has been carefully architected to address a wide range of business scenarios for both customers and employees. Development process involved deep research, precise modeling of use cases and rigorous attention to detail to ensure system reliability and intuitive UX. It covers all important business processes - user registration, membership management, scheduling, payments, role-based access and so on. Project demonstrates not only strong technical skills (Java, JavaFX, UI/UX design, OOP) but also ability to analyze real business requirements and translate them into robust, user-friendly solutions. It automates key operations, reduces human errors and enhances user experience with an intuitive, responsive interface. Also shows, how thoughtful system design can support digital transformation and improve efficiency of business in fitness industry.`,
    images: [
      "/projects/globogym/logo.png",
      "/projects/globogym/1.png",
      "/projects/globogym/2.png",
      "/projects/globogym/3.png",
      "/projects/globogym/4.png",
      "/projects/globogym/5.png",
      "/projects/globogym/6.png",
      "/projects/globogym/7.png",
      "/projects/globogym/8.png",
      "/projects/globogym/9.png",
      "/projects/globogym/10.png",
      "/projects/globogym/11.png",
      "/projects/globogym/12.png",
      "/projects/globogym/13.png",
      "/projects/globogym/14.png",
      "/projects/globogym/15.png",
      "/projects/globogym/16.png",
      "/projects/globogym/17.png",
      "/projects/globogym/18.png",
      "/projects/globogym/19.png",
      "/projects/globogym/20.png",
      "/projects/globogym/21.png",
    ],
    features: [
      "All user interactions and data changes are saved to file and visible after restarting app due to used serialization mechanisms.",
      "All input fields across the application are validated to ensure data integrity.",
      "Registration. Both club member and coach account can be created. Coach accounts require manual approval by authorized employee.",
      "Authentication. Mechanism to login to user account after registration.",
      "Real-time access to gym opening hours and open/closed status based on current time and date.",
      "Personalized user dashboard with possibility to update personal data (with setting up specializations on coach accounts) and upload avatar.",
      "Interactive calendar-based schedule view with highlighted classes and other events on appropriate days and times.",
      "Possibility to see some statistics related to account, which is currently authenticated.",
      "Payments module allowing users to deposit money, follow up their account balance and view transaction history.",
      "Membership management view allowing to purchase/renew membership and visualize appearance of their membership card.",
      "Intelligent class booking system for club members and coaches with validation (by checking active membership, availability, future dates or duplicates).",
      "Possibility to add classes to schedule by coaches with active membership, employees and managers.",
      "Possibility to add other events to schedule by employees and managers.",
      "Administration panels for employees and managers.",
    ],
    technologies: ["Java", "JavaFX", "Lombok", "Maven", "CSS"],
    repoUrl: "https://github.com/P4ZD4N/globogym",
    completed: true,
  },
  {
    title: "Instalatorstwo elektryczne",
    industry: "Electrical industry",
    description:
      "Comprehensive marketing strategy for a client operating in the electrical industry. My work included: lightweight website, full branding package (custom logo design, vehicle decals for company car, branded t-shirts and jackets for staff, promotional banners highlighting new services and large banner installed on a pole near office), boosting online presence by setting up and optimizing Facebook business page and Google Maps listing to improve local discoverability.",
    images: [
      "/projects/instalatorstwo-elektryczne/logo.png",
      "/projects/instalatorstwo-elektryczne/banner.png",
      "/projects/instalatorstwo-elektryczne/1.png",
      "/projects/instalatorstwo-elektryczne/2.png",
      "/projects/instalatorstwo-elektryczne/3.png",
      "/projects/instalatorstwo-elektryczne/4.png",
      "/projects/instalatorstwo-elektryczne/5.png",
      "/projects/instalatorstwo-elektryczne/6.png",
      "/projects/instalatorstwo-elektryczne/7.png",
      "/projects/instalatorstwo-elektryczne/1.gif",
    ],
    features: [
      "Designed and developed lightweight website, which is intended to serve as a business card. Created using HTML, SCSS, Bootstrap and vanilla JavaScript. Chose framework-free implementation to reduce overhead and better align with long-term maintainability and budget constraints. One of the most important features is integration with Google Analytics for tracking website traffic in easy way.",
      "Created full branding package including custom logo design, vehicle decals for company car, branded t-shirts and jackets for staff, promotional banners highlighting new services and large banner installed on a pole near office.",
      "Boosted online presence by setting up and optimizing Facebook business page and Google Maps listing to improve local discoverability.",
    ],
    technologies: ["JavaScript", "HTML", "SCSS", "Bootstrap"],
    repoUrl: "https://github.com/P4ZD4N/instalatorstwo-elektryczne",
    liveUrl: "https://marcinchudy.com",
    completed: true,
  },
  {
    title: "Wiktor Chudy",
    industry: "Personal website and blog",
    description:
      "My personal website combined with blog is a place where others can discover who I am both professionally and personally. It brings detailed insights into my projects, work expierience, education and the skills I have developed over time. Beyond being a digital portfolio, it's also space where I share knowledge, reflect on my experiences and document my growth. Intended for anyone who wants to get to know me better, what I care about and what Iâ€™m capable of.",
    images: ["/projects/wiktor-chudy/logo.png"],
    features: [
      "Home page - quick introduction and all essential information in one place. Section includes tech carousel showcasing my core technical skills, project cards highlighting my most important projects, article cards featuring my three most recent articles and contact section with my social links and contact data.",
      "Work page - place where you can discover detailed insights into my projects including image galleries, full descriptions, features lists and technologies lists.",
      "About me page - section where you can get to know me better. Contains detailed information about me both as a professional and as a person.",
      "Articles page - browse all of my published articles and filter them by category to find topics that interest you.",
      "Contact page - get in touch with me directly. Here you will find my contact details and social media links, making it easy to reach out.",
    ],
    technologies: [
      "TypeScript",
      "React",
      "Next.js 15",
      "HTML",
      "CSS",
      "Tailwind",
    ],
    repoUrl: "https://github.com/P4ZD4N/wiktor-chudy",
    liveUrl: "https://wiktorchudy.me",
    completed: false,
  },
  {
    title: "Baloney",
    industry: "Social networking",
    description:
      "Full-stack app intended to share memories with other people, who uses it. During development I am mainly responsible for backend development. It is collaborative app, which I create with my friend. During development we do code reviews and exchange our ideas to solve problems more effectively.",
    images: ["/projects/baloney/social.jpg"],
    features: [
      "User registration and authentication system implemented with JWT for token-based sessions and bcrypt for secure password hashing.",
      "Support for uploading user avatars integrated with AWS S3 for file storage.",
      "Email verification via JavaMailSender, using OTP for confirmation.",
      "Forgot password feature, allowing users to reset forgotten passwords through JavaMailSender.",
    ],
    technologies: [
      "Java 21",
      "Spring Boot",
      "Spring Security",
      "Spring Data",
      "Hibernate",
      "Thymeleaf",
      "Maven",
      "PostgreSQL",
      "HTML",
      "Docker",
      "AWS S3",
      "AWS IAM",
    ],
    repoUrl: "https://github.com/surferhand",
    completed: false,
  },
  {
    title: "DBee",
    industry: "Data storage systems",
    description:
      "Authorial Relational Database Management System (RDBMS) created with C++20. App is intended to serve as a storage, which enable to manage data with query language similar to SQL. User can create and manage multiple databases within the entire system. While building this system, I learned how relational databases work under the hood - including how they handle schemas, data types, constraints, and foreign keys. This helped me better understand how higher-level tools work and how to connect application development with how databases are actually built.",
    images: ["/projects/dbee/logo.png"],
    features: [
      "Possibility to manage multiple independent databases in one environment.",
      "Support for creating and managing tables with the ability to define columns with precisely defined data types: INTEGER, FLOAT or TEXT.",
      "Possibility to add important constraints on columns to ensure data integrity: PRIMARY KEY, FOREIGN KEY, UNIQUE or NOT NULL.",
      "Parser, which has ability to interpret queries written in a SQL-like syntax and execute proper operations based on entered query.",
      "Possibility to save and read RDBMS data from file. Enable to restore the entire RDBMS structure including databases, tables, columns, constraints and data.",
    ],
    technologies: ["C++20", "CMake"],
    repoUrl: "https://github.com/P4ZD4N/dbee",
    completed: true,
  },
  {
    title: "Area intruders",
    industry: "Game development",
    description:
      "Game based on classic and iconic Space Invaders - arcade game, in which player controls the ship trying to shoot down approaching enemies. The main goal of creating such project was to apply more advanced aspects of Java language in practice. To create it, I used, among others, multithreading mechanisms, lambdas or streams. User interface was implemented with usage of Swing and AWT libraries, which provide powerful tools for building GUI and managing events within game. ",
    images: [
      "/projects/area-intruders/1.png",
      "/projects/area-intruders/2.png",
      "/projects/area-intruders/3.png",
      "/projects/area-intruders/4.png",
      "/projects/area-intruders/5.png",
      "/projects/area-intruders/6.png",
      "/projects/area-intruders/1.gif",
    ],
    features: [
      "Main menu, in which user can enter nickname, choose ship appearance, display instructions, settings and top 10 scores.",
      "Player can control ship using arrow keys on the keyboard or special buttons in the window.",
      "Player can shoot using spacebar or special button in the window.",
      "Player can pause game.",
      "Player can end game at any time and be included in the top 10 results, if he has achieved the appropriate number of points.",
      "Player has a lot of setting options including: default difficulty levels (easy, normal, hard), game modes (normal, disco, mirror) and custom settings (enemy rows, enemy columns, enemy rows falling time). ",
      "Player earn points for hitting an enemy. Number of points depends on the selected difficulty level and game mode (possibly on player's custom settings).",
      "Scores are saved to the file, based on which the top 10 scores is prepared.",
      "Game offers the option of replaying game on previous settings after losing or finishing the game.",
    ],
    technologies: ["Java", "Swing", "AWT"],
    repoUrl: "https://github.com/P4ZD4N/area-intruders",
    completed: true,
  },
  {
    title: "Distributed Averaging System",
    industry: "Networking",
    description:
      "Distributed Averaging System is app that operates in two modes: master and slave. The purpose of the application is to collect numerical data from various instances of the program and calculate the average of these numbers. The application uses the UDP communication protocol to transfer data between devices in the local network.",
    images: [
      "/projects/distributed-averaging-system/1.gif",
      "/projects/distributed-averaging-system/2.gif",
      "/projects/distributed-averaging-system/3.gif",
      "/projects/distributed-averaging-system/4.gif",
      "/projects/distributed-averaging-system/5.png",
    ],
    features: [],
    technologies: ["Java 8"],
    repoUrl: "https://github.com/P4ZD4N/distributed-averaging-system",
    completed: true,
  },
  {
    title: "Centralized Computing System",
    industry: "Networking",
    description:
      "Java-based server application created to facilitate the detection of its service in a local network, perform arithmetic operations for connected clients and provide statistical reports on its activity. The application operates using both the UDP and TCP protocols to handle different functionalities. The goal of project is to create a robust and efficient server capable of managing multiple clients simultaneously and providing real-time statistics about various operations.",
    images: [
      "/projects/centralized-computing-system/1.gif",
      "/projects/centralized-computing-system/2.png",
      "/projects/centralized-computing-system/3.png",
      "/projects/centralized-computing-system/4.png",
      "/projects/centralized-computing-system/5.png",
      "/projects/centralized-computing-system/6.png",
      "/projects/centralized-computing-system/7.png",
      "/projects/centralized-computing-system/8.png",
      "/projects/centralized-computing-system/9.png",
    ],
    features: [],
    technologies: ["Java 8"],
    repoUrl: "https://github.com/P4ZD4N/centralized-computing-system",
    completed: true,
  },
];

export default projects;